name: Development Branch
on:
  push:
    branches:
      - develop

env:
  GHCR_URL: ghcr.io
  GHCR_IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_IMAGE_NAME: beenum/comet

jobs:
  lint-last-message:
    name: Lint Commit Message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4
        name: Lint Commit Message
        with:
          configFile: .commitlint.js
          helpURL: https://www.conventionalcommits.org/en/v1.0.0/
  python-unit-test:
    name: Execute Comet Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python Env
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Run Unit Tests
        uses: onichandame/python-test-action@master
        with:
          deps_list: 'requirements.txt'
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build & Export
        uses: docker/build-push-action@v2
        with:
          context: .
          outputs: type=docker,dest=/tmp/comet.tar
          tags: comet:latest
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: comet-image
          path: /tmp/comet.tar
          retention-days: 1
  upgrade-version:
    name: Upgrade Version
    runs-on: ubuntu-latest
    needs:
      - lint-last-message
      - python-unit-test
      - build-image
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Git Author
        uses: fregante/setup-git-user@v1
      - name: Setup Python Env
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Comet
        run: pip install --user .
      - name: Upgrade Version
        run: >-
              comet
              --debug
              development
              --scm-provider github
              --username ${{ secrets.GIT_USERNAME }}
              --password ${{ secrets.GIT_TOKEN }}
              --connection-type https
              --push
      - name: Upload Comet Config
        uses: actions/upload-artifact@v2
        with:
          name: comet-version
          path: .comet.yml
          retention-days: 1
  push-image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - upgrade-version
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: comet-image
          path: /tmp
      - uses: actions/download-artifact@v2
        with:
          name: comet-version
      - name: Setup Python Env
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Comet
        run: pip install --user .
      - name: Set Version Variable
        run: echo "VERSION=$(comet --suppress --project-version . | cut -d' ' -f2 | tr + _)" >> $GITHUB_ENV
      - name: Load Docker Image
        run: |
          docker load --input /tmp/comet.tar
          docker tag comet:latest ${{ env.DOCKERHUB_IMAGE_NAME }}:${{ env.VERSION }}
          docker tag bcomet:latest ${{ env.GHCR_URL }}/${{ env.GHCR_IMAGE_NAME }}:${{ env.VERSION }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE_NAME }}:${{ env.VERSION }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_CR_TOKEN }}
      - name: Push Image to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.GHCR_URL }}/${{ env.GHCR_IMAGE_NAME }}:${{ env.VERSION }}